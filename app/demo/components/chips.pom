require_relative '../helpers/indented_grid'

Coprl::Presenters.define(:chips) do
  helpers Demo::Helpers::IndentedGrid
  attach :top_nav
  attach :component_drawer
  page_title 'Chips'


  indented_grid do
    content padding: :bottom do
      text "Chips are always contained within a `chipset` component."
    end

    chipset do
      chip 'Chip 1'
      chip 'Chip 1', color: :primary
      chip 'Chip 2', color: :secondary
      chip color: :hotpink do
        text 'Chip 3', color: :white
      end
    end

    subheading 'leading icon'
    chipset do
      chip 'Jane Smith', icon: :face
    end

    subheading 'trailing icon'
    chipset do
      chip 'Jane Smith' do
        icon :more_vert, position: :right
      end
    end

    subheading 'leading and trailing icon'
    chipset do
      chip 'Jane Smith' do
        icon :face, position: :left
        icon :more_vert, position: :right
      end
    end

    heading 'Events'

    text <<~TEXT
      As with other components, chips support events. Additionally, a chip's leading icon, text,
      and trailing icon all individually support their own events.
    TEXT

    chipset do
      chip 'Jane Smith' do
        icon :face, position: :left
        icon :more_vert, position: :right
        event :click do
          snackbar 'chip clicked!'
        end
      end
      chip do
        text 'Jane Smith' do
          event :click do
            snackbar 'text clicked'
          end
        end
        icon :face, position: :left
        icon :more_vert, position: :right
        event :click do
          snackbar 'chip clicked!'
        end
      end

      chip do
        text 'Jane Smith' do
          event :click do
            snackbar 'text clicked'
          end
        end
        icon :face, position: :left do
          event :click do
            snackbar 'left icon clicked'
          end
        end
        icon :more_vert, position: :right
        event :click do
          snackbar 'chip clicked!'
        end
      end

      chip do
        text 'Jane Smith' do
          event :click do
            snackbar 'text clicked'
          end
        end
        icon :face, position: :left do
          event :click do
            snackbar 'left icon clicked'
          end
        end
        icon :more_vert, position: :right do
          event :click do
            snackbar 'right icon clicked'
          end
        end
      end
    end

    content padding: %i[top bottom] do
      title '`filter` chipset'
      text "Alright, who's in?"

      chipset :filter do
        ['Danny Ocean', 'Frank Catton', 'Robert "Rusty" Ryan', 'Tess Ocean'].each do |peep|
          chip peep, selected: rand > 0.5 do
            event :select do
              snackbar "#{peep}'s in!"
            end

            event :deselect do
              snackbar "#{peep}'s out."
            end
          end
        end
      end
    end

    content padding: %i[top bottom] do
      title '`choice` chipset'
      text 'At most one chip in a `choice` chipset can be selected.'

      chipset :choice do
        %w[Sun Mon Tue Wed Thu Fri Sat].each do |text|
          chip text do
            event :select do
              snackbar "My favorite day is #{text}."
            end

            event :deselect do
              snackbar "I have no favorite day."
            end
          end
        end
      end
    end

    form padding: %i[top bottom4] do
      title '`input` chipset'
      text '`input` chipsets convert typed tokens to chips. The chips can be removed by the user.'

      chipset :input, name: 'values[]' do
        label 'Fruits'

        %w[Apple Orange Lime].each do |text|
          chip text, value: text
        end
      end

      content padding: %i[top bottom4] do
        button 'Submit', type: :raised do
          event :click do
            replaces :submitted_chips, :submitted_chips
          end
        end
      end
    end

    attach :submitted_chips

    attach :code, file: __FILE__
  end
end

Coprl::Presenters.define(:submitted_chips) do
  helpers do
    def values
      context.fetch(:values) { [] }
    end
  end

  content id: :submitted_chips do
    title 'Submitted chips' if values.any?

    values.each do |value|
      text "* #{value}"
    end
  end
end
