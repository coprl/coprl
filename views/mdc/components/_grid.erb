<%
  @grid_nesting ||= 0
  @grid_nesting += 1
  @gutters ||= [true]
  # gutters once turned off are turned off for all nested grids
  @gutters.push comp.gutter.nil? ? @gutters.last : comp.gutter
%>
<div id="<%= comp.id %>"
     <% if comp.input_tag %>data-input-tag="<%= comp.input_tag %>"<% end %>
     class="v-grid mdc-layout-grid
            <%= padding_classes(comp.padding, @grid_nesting) %>
            <%= 'v-grid__wide' if comp.wide %>
            <%= comp.css_class.join(' ') %>
            <%= 'v-hidden' if comp.hidden %>"
     style="<%= "background-color: #{comp.color};" if comp.color %><%= "height:#{comp.height};" if comp.height %>"
     <%= partial "components/event", :locals => {comp: comp, events: comp.events, parent_id: comp.event_parent_id} if comp.events&.any? %>>
  <%= partial("components/progress", :locals => {:comp => comp.progress}) if comp.progress && includes_one?(Array(comp.progress.position), %i(top both))%>

  <div class="<%= @gutters.last ? nil : 'v-gutter-none' %> mdc-layout-grid__inner
              <%= grid_direction_class(comp.direction) %>
              <%= grid_align_class(comp.align) %>
              <%= grid_justify_class(comp.justify) %>"
       style="<%= "height:#{comp.height};" if comp.height %>">
    <% comp.columns.each do |col| %>
      <%= partial 'components/grid/column', locals: {comp: col} %>
    <% end %>
  </div>
  <%= partial("components/progress", :locals => {:comp => comp.progress}) if comp.progress && includes_one?(Array(comp.progress.position), %i(bottom both))%>
</div>
<% @grid_nesting -= 1
   @gutters.pop
%>
